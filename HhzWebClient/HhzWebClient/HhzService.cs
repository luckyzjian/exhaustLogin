//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="OutAccessSoap", Namespace="http://OutAccess.org/")]
public partial class OutAccess : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback WriteBCDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback WritePdaDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback TakePhotoTestOperationCompleted;
    
    private System.Threading.SendOrPostCallback TakePhotoOperationCompleted;
    
    private System.Threading.SendOrPostCallback URLEnCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback URLDeCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback queryObjectOutOperationCompleted;
    
    private System.Threading.SendOrPostCallback writeObjectOutOperationCompleted;
    
    private System.Threading.SendOrPostCallback PDALoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback BeginWGTestOperationCompleted;
    
    /// <remarks/>
    public OutAccess() {
        this.Url = "http://127.0.0.1:88/webservice/outaccess.asmx";
    }
    public OutAccess(string url)
    {
        this.Url = url;
    }


    /// <remarks/>
    public event WriteBCDataCompletedEventHandler WriteBCDataCompleted;
    
    /// <remarks/>
    public event WritePdaDataCompletedEventHandler WritePdaDataCompleted;
    
    /// <remarks/>
    public event TakePhotoTestCompletedEventHandler TakePhotoTestCompleted;
    
    /// <remarks/>
    public event TakePhotoCompletedEventHandler TakePhotoCompleted;
    
    /// <remarks/>
    public event URLEnCodeCompletedEventHandler URLEnCodeCompleted;
    
    /// <remarks/>
    public event URLDeCodeCompletedEventHandler URLDeCodeCompleted;
    
    /// <remarks/>
    public event queryObjectOutCompletedEventHandler queryObjectOutCompleted;
    
    /// <remarks/>
    public event writeObjectOutCompletedEventHandler writeObjectOutCompleted;
    
    /// <remarks/>
    public event PDALoginCompletedEventHandler PDALoginCompleted;
    
    /// <remarks/>
    public event GetDataCompletedEventHandler GetDataCompleted;
    
    /// <remarks/>
    public event BeginWGTestCompletedEventHandler BeginWGTestCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/WriteBCData", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string WriteBCData(string Jylsh, string Data, int DataType, string Para, string LineID, string PdaMac, string jysj) {
        object[] results = this.Invoke("WriteBCData", new object[] {
                    Jylsh,
                    Data,
                    DataType,
                    Para,
                    LineID,
                    PdaMac,
                    jysj});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginWriteBCData(string Jylsh, string Data, int DataType, string Para, string LineID, string PdaMac, string jysj, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("WriteBCData", new object[] {
                    Jylsh,
                    Data,
                    DataType,
                    Para,
                    LineID,
                    PdaMac,
                    jysj}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndWriteBCData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void WriteBCDataAsync(string Jylsh, string Data, int DataType, string Para, string LineID, string PdaMac, string jysj) {
        this.WriteBCDataAsync(Jylsh, Data, DataType, Para, LineID, PdaMac, jysj, null);
    }
    
    /// <remarks/>
    public void WriteBCDataAsync(string Jylsh, string Data, int DataType, string Para, string LineID, string PdaMac, string jysj, object userState) {
        if ((this.WriteBCDataOperationCompleted == null)) {
            this.WriteBCDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteBCDataOperationCompleted);
        }
        this.InvokeAsync("WriteBCData", new object[] {
                    Jylsh,
                    Data,
                    DataType,
                    Para,
                    LineID,
                    PdaMac,
                    jysj}, this.WriteBCDataOperationCompleted, userState);
    }
    
    private void OnWriteBCDataOperationCompleted(object arg) {
        if ((this.WriteBCDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.WriteBCDataCompleted(this, new WriteBCDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/WritePdaData", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string WritePdaData(string Jylsh, string Data, int DataType, string Para, string LineID, string PdaMac) {
        object[] results = this.Invoke("WritePdaData", new object[] {
                    Jylsh,
                    Data,
                    DataType,
                    Para,
                    LineID,
                    PdaMac});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginWritePdaData(string Jylsh, string Data, int DataType, string Para, string LineID, string PdaMac, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("WritePdaData", new object[] {
                    Jylsh,
                    Data,
                    DataType,
                    Para,
                    LineID,
                    PdaMac}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndWritePdaData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void WritePdaDataAsync(string Jylsh, string Data, int DataType, string Para, string LineID, string PdaMac) {
        this.WritePdaDataAsync(Jylsh, Data, DataType, Para, LineID, PdaMac, null);
    }
    
    /// <remarks/>
    public void WritePdaDataAsync(string Jylsh, string Data, int DataType, string Para, string LineID, string PdaMac, object userState) {
        if ((this.WritePdaDataOperationCompleted == null)) {
            this.WritePdaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWritePdaDataOperationCompleted);
        }
        this.InvokeAsync("WritePdaData", new object[] {
                    Jylsh,
                    Data,
                    DataType,
                    Para,
                    LineID,
                    PdaMac}, this.WritePdaDataOperationCompleted, userState);
    }
    
    private void OnWritePdaDataOperationCompleted(object arg) {
        if ((this.WritePdaDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.WritePdaDataCompleted(this, new WritePdaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/TakePhotoTest", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TakePhotoTest(string Ip, string Dk, string Yhm, string Mm, string Td, ushort zl, ushort fbl) {
        object[] results = this.Invoke("TakePhotoTest", new object[] {
                    Ip,
                    Dk,
                    Yhm,
                    Mm,
                    Td,
                    zl,
                    fbl});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTakePhotoTest(string Ip, string Dk, string Yhm, string Mm, string Td, ushort zl, ushort fbl, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TakePhotoTest", new object[] {
                    Ip,
                    Dk,
                    Yhm,
                    Mm,
                    Td,
                    zl,
                    fbl}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTakePhotoTest(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TakePhotoTestAsync(string Ip, string Dk, string Yhm, string Mm, string Td, ushort zl, ushort fbl) {
        this.TakePhotoTestAsync(Ip, Dk, Yhm, Mm, Td, zl, fbl, null);
    }
    
    /// <remarks/>
    public void TakePhotoTestAsync(string Ip, string Dk, string Yhm, string Mm, string Td, ushort zl, ushort fbl, object userState) {
        if ((this.TakePhotoTestOperationCompleted == null)) {
            this.TakePhotoTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTakePhotoTestOperationCompleted);
        }
        this.InvokeAsync("TakePhotoTest", new object[] {
                    Ip,
                    Dk,
                    Yhm,
                    Mm,
                    Td,
                    zl,
                    fbl}, this.TakePhotoTestOperationCompleted, userState);
    }
    
    private void OnTakePhotoTestOperationCompleted(object arg) {
        if ((this.TakePhotoTestCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TakePhotoTestCompleted(this, new TakePhotoTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/TakePhoto", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TakePhoto(string jcxh, string zpzl, string WriteXmlDoc) {
        object[] results = this.Invoke("TakePhoto", new object[] {
                    jcxh,
                    zpzl,
                    WriteXmlDoc});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTakePhoto(string jcxh, string zpzl, string WriteXmlDoc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TakePhoto", new object[] {
                    jcxh,
                    zpzl,
                    WriteXmlDoc}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTakePhoto(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TakePhotoAsync(string jcxh, string zpzl, string WriteXmlDoc) {
        this.TakePhotoAsync(jcxh, zpzl, WriteXmlDoc, null);
    }
    
    /// <remarks/>
    public void TakePhotoAsync(string jcxh, string zpzl, string WriteXmlDoc, object userState) {
        if ((this.TakePhotoOperationCompleted == null)) {
            this.TakePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTakePhotoOperationCompleted);
        }
        this.InvokeAsync("TakePhoto", new object[] {
                    jcxh,
                    zpzl,
                    WriteXmlDoc}, this.TakePhotoOperationCompleted, userState);
    }
    
    private void OnTakePhotoOperationCompleted(object arg) {
        if ((this.TakePhotoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TakePhotoCompleted(this, new TakePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/URLEnCode", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string URLEnCode(string str) {
        object[] results = this.Invoke("URLEnCode", new object[] {
                    str});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginURLEnCode(string str, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("URLEnCode", new object[] {
                    str}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndURLEnCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void URLEnCodeAsync(string str) {
        this.URLEnCodeAsync(str, null);
    }
    
    /// <remarks/>
    public void URLEnCodeAsync(string str, object userState) {
        if ((this.URLEnCodeOperationCompleted == null)) {
            this.URLEnCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnURLEnCodeOperationCompleted);
        }
        this.InvokeAsync("URLEnCode", new object[] {
                    str}, this.URLEnCodeOperationCompleted, userState);
    }
    
    private void OnURLEnCodeOperationCompleted(object arg) {
        if ((this.URLEnCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.URLEnCodeCompleted(this, new URLEnCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/URLDeCode", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string URLDeCode(string str) {
        object[] results = this.Invoke("URLDeCode", new object[] {
                    str});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginURLDeCode(string str, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("URLDeCode", new object[] {
                    str}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndURLDeCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void URLDeCodeAsync(string str) {
        this.URLDeCodeAsync(str, null);
    }
    
    /// <remarks/>
    public void URLDeCodeAsync(string str, object userState) {
        if ((this.URLDeCodeOperationCompleted == null)) {
            this.URLDeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnURLDeCodeOperationCompleted);
        }
        this.InvokeAsync("URLDeCode", new object[] {
                    str}, this.URLDeCodeOperationCompleted, userState);
    }
    
    private void OnURLDeCodeOperationCompleted(object arg) {
        if ((this.URLDeCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.URLDeCodeCompleted(this, new URLDeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/queryObjectOut", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string queryObjectOut(string jkid, string QueryXmlDoc) {
        object[] results = this.Invoke("queryObjectOut", new object[] {
                    jkid,
                    QueryXmlDoc});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryObjectOut(string jkid, string QueryXmlDoc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryObjectOut", new object[] {
                    jkid,
                    QueryXmlDoc}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndqueryObjectOut(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void queryObjectOutAsync(string jkid, string QueryXmlDoc) {
        this.queryObjectOutAsync(jkid, QueryXmlDoc, null);
    }
    
    /// <remarks/>
    public void queryObjectOutAsync(string jkid, string QueryXmlDoc, object userState) {
        if ((this.queryObjectOutOperationCompleted == null)) {
            this.queryObjectOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryObjectOutOperationCompleted);
        }
        this.InvokeAsync("queryObjectOut", new object[] {
                    jkid,
                    QueryXmlDoc}, this.queryObjectOutOperationCompleted, userState);
    }
    
    private void OnqueryObjectOutOperationCompleted(object arg) {
        if ((this.queryObjectOutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryObjectOutCompleted(this, new queryObjectOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/writeObjectOut", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string writeObjectOut(string jkid, string WriteXmlDoc) {
        object[] results = this.Invoke("writeObjectOut", new object[] {
                    jkid,
                    WriteXmlDoc});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginwriteObjectOut(string jkid, string WriteXmlDoc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("writeObjectOut", new object[] {
                    jkid,
                    WriteXmlDoc}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndwriteObjectOut(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void writeObjectOutAsync(string jkid, string WriteXmlDoc) {
        this.writeObjectOutAsync(jkid, WriteXmlDoc, null);
    }
    
    /// <remarks/>
    public void writeObjectOutAsync(string jkid, string WriteXmlDoc, object userState) {
        if ((this.writeObjectOutOperationCompleted == null)) {
            this.writeObjectOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteObjectOutOperationCompleted);
        }
        this.InvokeAsync("writeObjectOut", new object[] {
                    jkid,
                    WriteXmlDoc}, this.writeObjectOutOperationCompleted, userState);
    }
    
    private void OnwriteObjectOutOperationCompleted(object arg) {
        if ((this.writeObjectOutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.writeObjectOutCompleted(this, new writeObjectOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/PDALogin", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string PDALogin(string username, string password, string pdamac) {
        object[] results = this.Invoke("PDALogin", new object[] {
                    username,
                    password,
                    pdamac});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginPDALogin(string username, string password, string pdamac, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("PDALogin", new object[] {
                    username,
                    password,
                    pdamac}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndPDALogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void PDALoginAsync(string username, string password, string pdamac) {
        this.PDALoginAsync(username, password, pdamac, null);
    }
    
    /// <remarks/>
    public void PDALoginAsync(string username, string password, string pdamac, object userState) {
        if ((this.PDALoginOperationCompleted == null)) {
            this.PDALoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPDALoginOperationCompleted);
        }
        this.InvokeAsync("PDALogin", new object[] {
                    username,
                    password,
                    pdamac}, this.PDALoginOperationCompleted, userState);
    }
    
    private void OnPDALoginOperationCompleted(object arg) {
        if ((this.PDALoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PDALoginCompleted(this, new PDALoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/GetData", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetData(string Jylsh, string TestMethod, string PdaMac) {
        object[] results = this.Invoke("GetData", new object[] {
                    Jylsh,
                    TestMethod,
                    PdaMac});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetData(string Jylsh, string TestMethod, string PdaMac, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetData", new object[] {
                    Jylsh,
                    TestMethod,
                    PdaMac}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetDataAsync(string Jylsh, string TestMethod, string PdaMac) {
        this.GetDataAsync(Jylsh, TestMethod, PdaMac, null);
    }
    
    /// <remarks/>
    public void GetDataAsync(string Jylsh, string TestMethod, string PdaMac, object userState) {
        if ((this.GetDataOperationCompleted == null)) {
            this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
        }
        this.InvokeAsync("GetData", new object[] {
                    Jylsh,
                    TestMethod,
                    PdaMac}, this.GetDataOperationCompleted, userState);
    }
    
    private void OnGetDataOperationCompleted(object arg) {
        if ((this.GetDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://OutAccess.org/BeginWGTest", RequestNamespace="http://OutAccess.org/", ResponseNamespace="http://OutAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string BeginWGTest(string Jylsh, string TestMethod, string PdaMac) {
        object[] results = this.Invoke("BeginWGTest", new object[] {
                    Jylsh,
                    TestMethod,
                    PdaMac});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginBeginWGTest(string Jylsh, string TestMethod, string PdaMac, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("BeginWGTest", new object[] {
                    Jylsh,
                    TestMethod,
                    PdaMac}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndBeginWGTest(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void BeginWGTestAsync(string Jylsh, string TestMethod, string PdaMac) {
        this.BeginWGTestAsync(Jylsh, TestMethod, PdaMac, null);
    }
    
    /// <remarks/>
    public void BeginWGTestAsync(string Jylsh, string TestMethod, string PdaMac, object userState) {
        if ((this.BeginWGTestOperationCompleted == null)) {
            this.BeginWGTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginWGTestOperationCompleted);
        }
        this.InvokeAsync("BeginWGTest", new object[] {
                    Jylsh,
                    TestMethod,
                    PdaMac}, this.BeginWGTestOperationCompleted, userState);
    }
    
    private void OnBeginWGTestOperationCompleted(object arg) {
        if ((this.BeginWGTestCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.BeginWGTestCompleted(this, new BeginWGTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void WriteBCDataCompletedEventHandler(object sender, WriteBCDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class WriteBCDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal WriteBCDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void WritePdaDataCompletedEventHandler(object sender, WritePdaDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class WritePdaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal WritePdaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void TakePhotoTestCompletedEventHandler(object sender, TakePhotoTestCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TakePhotoTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TakePhotoTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void TakePhotoCompletedEventHandler(object sender, TakePhotoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TakePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TakePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void URLEnCodeCompletedEventHandler(object sender, URLEnCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class URLEnCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal URLEnCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void URLDeCodeCompletedEventHandler(object sender, URLDeCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class URLDeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal URLDeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void queryObjectOutCompletedEventHandler(object sender, queryObjectOutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryObjectOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryObjectOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void writeObjectOutCompletedEventHandler(object sender, writeObjectOutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class writeObjectOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal writeObjectOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void PDALoginCompletedEventHandler(object sender, PDALoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PDALoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal PDALoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void BeginWGTestCompletedEventHandler(object sender, BeginWGTestCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class BeginWGTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal BeginWGTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
